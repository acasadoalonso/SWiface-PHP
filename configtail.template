# --------------------------------------#

def fixcoding(addr):
        if addr != None:
                addr=addr.replace(u'á', u'a')
                addr=addr.replace(u'à', u'a')
                addr=addr.replace(u'â', u'a')
                addr=addr.replace(u'Á', u'A')
                addr=addr.replace(u'é', u'e')
                addr=addr.replace(u'è', u'e')
                addr=addr.replace(u'ê', u'e')
                addr=addr.replace(u'É', u'E')
                addr=addr.replace(u'í', u'i')
                addr=addr.replace(u'ì', u'i')
                addr=addr.replace(u'î', u'i')
                addr=addr.replace(u'Í', u'I')
                addr=addr.replace(u'ó', u'o')
                addr=addr.replace(u'ò', u'o')
                addr=addr.replace(u'ô', u'o')
                addr=addr.replace(u'Ó', u'O')
                addr=addr.replace(u'Ò', u'O')
                addr=addr.replace(u'ú', u'u')
                addr=addr.replace(u'ù', u'u')
                addr=addr.replace(u'û', u'u')
                addr=addr.replace(u'Ú', u'U')
                addr=addr.replace(u'ü', u'u')
                addr=addr.replace(u'ñ', u'n')
                addr=addr.replace(u'Ñ', u'N')
                addr=addr.replace(u'Ø', u'O')
                addr=addr.replace(u'Ã', u'a')
                addr=addr.replace(u'ƒ', u'f')
                addr=addr.replace(u'Â', u'a')
                addr=addr.replace(u'¶', u'-')
                addr=addr.replace(u'…', u'-')
                addr=addr.replace(u'Ë', u'E')
                addr=addr.replace(u'†', u'-')
                addr=addr.replace(u'ä', u'-')
                addr=addr.replace(u'Ł', u'L')
                addr=addr.replace(u'ł', u'l')
                addr=addr.replace(u'ł', u'-')
        return addr

# --------------------------------------#
# default event if no JSON file found  
# --------------------------------------#


tp = [
        {
            "name": "Cerdanya",
            "trigger": "Enter",
            "longitude": 1.863883278972198,
            "observationZone": "Line",
            "radius": 3000,
            "latitude": 42.3875017060334,
            "type": "Start"
        },
        {
            "name": "E05/Santa Cilia",
            "trigger": "Enter",
            "longitude": -0.7433333293538958,
            "observationZone": "Cylinder",
            "radius": 3000,
            "latitude": 42.569717492711,
            "type": "Turnpoint"
        },
        {
            "name": "E18/Benabarre",
            "trigger": "Enter",
            "longitude": 0.4827833303850359,
            "observationZone": "Cylinder",
            "radius": 3000,
            "latitude": 42.022216359031944,
            "type": "Turnpoint"
        },
        {
            "name": "Cerdanya",
            "trigger": "Enter",
            "longitude": 1.8638888285008988,
            "observationZone": "Cylinder",
            "radius": 3000,
            "latitude": 42.3875017060334,
            "type": "Finish"
        },
    ]

tr1={"trackId": "FLRDDE421", "pilotName": "Juanma Garete ", "competitionId": "T1", "country": "ES", "aircraft": "Duo Discus", "registration": "EC-JAA", "3dModel": "ventus2", "ribbonColors":["green"]}
tr2={"trackId": "FLRDDE1FC", "pilotName": "Sergi Pujol", "competitionId": "SP", "country": "FR", "aircraft": "Duo Discus", "registration": "D-1234", "3dModel": "ventus2", "ribbonColors":["blue"]}
tr3={"trackId": "FLRDDDB8B", "pilotName": "Luis Ferreira", "competitionId": "AA", "country": "ES", "aircraft": "Duo Discus", "registration": "EC-JAA", "3dModel": "ventus2", "ribbonColors":["green"]}
tr4={"trackId": "FLRDDBC42", "pilotName": "Santa Cilia ", "competitionId": "T1", "country": "ES", "aircraft": "Duo Discus", "registration": "EC-JAA", "3dModel": "ventus2", "ribbonColors":["green"]}
tr5={"trackId": "FLRDDC1AC", "pilotName": "Angel Casado", "competitionId": "K5", "country": "ES", "aircraft": "Janus CE", "registration": "D-2520", "3dModel": "ventus2", "ribbonColors":["red"]}
QSGP={"name": "QSGP La Cerdanya", "description": "Day 1", "taskType": "SailplaneGrandPrix", "startOpenTs": 0, "turnpoints": tp, "tracks": [tr1, tr2, tr3, tr4, tr5]}

